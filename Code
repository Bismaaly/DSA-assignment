#include <iostream>
using namespace std;

#define MAX_SIZE 100

class Stack {
  private:
    int top;
    int arr[MAX_SIZE];
  
  public:
    Stack() {
        top = -1;
    }
    
    bool isFull() {
        return top == MAX_SIZE - 1;
    }
    
    bool isEmpty() {
        return top == -1;
    }
    
    void push(int val) {
        if (isFull()) {
            cout << "Stack Overflow!" << endl;
            return;
        }
        top++;
        arr[top] = val;
        cout << val << " pushed to stack" << endl;
    }
    
    int pop() {
        if (isEmpty()) {
            cout << "Stack Underflow!" << endl;
            return -1;
        }
        int val = arr[top];
        top--;
        cout << val << " popped from stack" << endl;
        return val;
    }
    
    void display() {
        if (isEmpty()) {
            cout << "Stack is empty" << endl;
            return;
        }
        cout << "Stack elements are:" << endl;
        for (int i = top; i >= 0; i--) {
            cout << arr[i] << endl;
        }
    }
};

int main() {
    Stack s;
    int choice, val;
    while (true) {
        cout << "Enter your choice:" << endl;
        cout << "1. Push" << endl;
        cout << "2. Pop" << endl;
        cout << "3. Display" << endl;
        cout << "4. Exit" << endl;
        cin >> choice;
        switch (choice) {
            case 1:
                cout << "Enter value to be pushed:" << endl;
                cin >> val;
                s.push(val);
                break;
            case 2:
                s.pop();
                break;
            case 3:
                s.display();
                break;
            case 4:
                exit(0);
            default:
                cout << "Invalid choice" << endl;
        }
    }
    return 0;
}
